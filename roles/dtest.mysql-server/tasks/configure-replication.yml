---
- debug: msg="Configure replication"
# Variables needed:
# - master_host
# - slave hosts (list)
# - Replication user
# - Replication password

# TODO: If configure_type = setup
  # TODO: Create replication user on all servers
  # TODO: Grab lock on master and grab master status
  # TODO:
# TODO: Ensure replication is stopped on slaves
# TODO: try to get MASTER

- debug: var="{{ hostvars }}"
  delegate_to: '{{ master }}'

# - name: Create replication user on master
#   mysql_user: name={{ mysql_replication['user'] }}  host={{ mysql_replication['host'] }} password={{ mysql_replication['password'] }}
#               priv=*.*:"REPLICATION SLAVE" state=present

# - name: Check if slave is already configured for replication
#   mysql_replication: mode=getslave
#   ignore_errors: true
#   register: slave
#   when: "ansible_hostname != '{{ master }}'"

# - name: Get the current master servers replication status
#   mysql_replication: mode=getmaster
#   delegate_to: "{{ master }}"
#   register: repl_stat
#   when: slave|failed


# - name: Change the master in slave to start the replication
#   mysql_replication: mode=changemaster master_host={{ hostvars[master]["ansible_ssh_host"] }} master_log_file={{ repl_stat.File }} master_log_pos={{ repl_stat.Position }} master_user={{ mysql_replication.user }} master_password={{ mysql_replication.password }}
#   when: slave|failed and "ansible_hostname != '{{ master }}'"
#   register: change_master

# - name: Start slave
#   mysql_replication: mode=startslave
#   when: "ansible_hostname != '{{ master }}'"